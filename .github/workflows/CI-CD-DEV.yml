# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      targetEnv:
        description: 'Target ENV i.e: develop, master'
        required: true
        default: 'develop'

jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    name: Docker Build Image
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    # ------------------ START APP ENVIRONMENT SELECTOR FROM PARAM SECTION ----------
    #Check selected ENV
    - name: Check ENV params
      run: echo targetEnv param is ${{ github.event.inputs.targetEnv }}

    #Check if ENV param is empty due to PR trigger then use QA as default
    - name: Check if Param ENV is incorrect . If so then select QA as default
      if: ${{ github.event.inputs.targetEnv == '' }}
      run: echo "TARGET_ENV=develop" >> "$GITHUB_ENV"
    #-------------------------- Build -------------------
    - name: Check TARGET ENV  param
      run: echo "${{ env.TARGET_ENV }}"
    - name: Build with Maven
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: mvn -B package --file services/housefy/pom.xml
    #-------------------------- Build Docker images and push -------------------
    - name: Build and push docker images
      run: |
        echo "Starting build tag and push"
        docker build --platform linux/amd64  -t douglascamposh/housefy -f ./services/housefy/Dockerfile ./services/housefy
        echo "Pushing image"
        docker push douglascamposh/housefy


